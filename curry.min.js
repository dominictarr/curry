!function(e){if("function"==typeof bootstrap)bootstrap("curry",e);else if("object"==typeof exports)module.exports=e();else if("function"==typeof define&&define.amd)define(e);else if("undefined"!=typeof ses){if(!ses.ok())return;ses.makeCurry=e}else"undefined"!=typeof window?window.curry=e():global.curry=e()}(function(){var define,ses,bootstrap,module,exports;return function(e,t,n){function i(n,s){if(!t[n]){if(!e[n]){var o=typeof require=="function"&&require;if(!s&&o)return o(n,!0);if(r)return r(n,!0);throw new Error("Cannot find module '"+n+"'")}var u=t[n]={exports:{}};e[n][0].call(u.exports,function(t){var r=e[n][1][t];return i(r?r:t)},u,u.exports)}return t[n].exports}var r=typeof require=="function"&&require;for(var s=0;s<n.length;s++)i(n[s]);return i}({1:[function(require,module,exports){var slice=Array.prototype.slice;var toArray=function(a){return slice.call(a)};var createFn=function(fn,args){var arity=fn.length-args.length;if(arity===0)return function(){return processInvocation(fn,argify(args,arguments))};if(arity===1)return function(a){return processInvocation(fn,argify(args,arguments))};if(arity===2)return function(a,b){return processInvocation(fn,argify(args,arguments))};if(arity===3)return function(a,b,c){return processInvocation(fn,argify(args,arguments))};if(arity===4)return function(a,b,c,d){return processInvocation(fn,argify(args,arguments))};if(arity===5)return function(a,b,c,d,e){return processInvocation(fn,argify(args,arguments))};if(arity===6)return function(a,b,c,d,e,f){return processInvocation(fn,argify(args,arguments))};if(arity===7)return function(a,b,c,d,e,f,g){return processInvocation(fn,argify(args,arguments))};if(arity===8)return function(a,b,c,d,e,f,g,h){return processInvocation(fn,argify(args,arguments))};if(arity===9)return function(a,b,c,d,e,f,g,h,i){return processInvocation(fn,argify(args,arguments))};if(arity===10)return function(a,b,c,d,e,f,g,h,i,j){return processInvocation(fn,argify(args,arguments))};return createEvalFn(fn,args,arity)};var argify=function(args1,args2){return args1.concat(toArray(args2))};var createEvalFn=function(fn,args,arity){var argList=makeArgList(arity);var fnStr="false||"+"function curriedFn("+argList+"){ return processInvocation(fn, argify(args, arguments)); }";return eval(fnStr)};var makeArgList=function(len){var a=[];for(var i=0;i<len;i+=1)a.push("a"+i.toString());return a.join(",")};var processInvocation=function(fn,args){if(args.length>fn.length)return fn.apply(null,args.slice(0,fn.length));if(args.length===fn.length)return fn.apply(null,args);return createFn(fn,args)};var curry=function(fn){return createFn(fn,[])};module.exports=curry},{}]},{},[1])(1)});